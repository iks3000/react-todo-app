{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","event","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","activeClass","ItemAddForm","onLabelChange","onSubmit","preventDefault","addItem","App","maxId","todoData","createTodoItem","deleteItemByFilter","el","text","newItem","toggleProperty","arr","propName","idx","findIndex","oldItem","slice","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b13b2fa4.chunk.js","sourcesContent":["import AppHeader from './app-header';\n\nexport default AppHeader;","import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = ({toDo, done}) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Todo List</h1>\n      <h2>{toDo} more to do, {done} done</h2>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import SearchPanel from './search-panel';\n\nexport default SearchPanel;","import React, { Component } from 'react';\n\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component {\n\n  state = {\n    term: ''\n  }\n\n  onSearchChange = (event) => {\n    const term = event.target.value;\n    this.setState({ term });\n    this.props.onSearchChange(term);\n  }\n\n  render() {\n    return (\n      <input\n        type=\"text\"\n        className=\"form-control search-input shadow-none\"\n        placeholder=\"type to search\"\n        value={this.state.term}\n        onChange={this.onSearchChange}\n      />\n    );\n  }\n};\n","import React, { Component } from 'react';\nimport './todo-list-item.css';\n\nexport default class TodoListItem extends Component {\n\n  render() {\n    const { label, onDeleted, onToggleImportant, onToggleDone, done, important } = this.props;\n\n    let classNames = 'todo-list-item';\n\n    if (done) {\n      classNames += ' done';\n    }\n    if (important) {\n      classNames += ' important';\n    }\n\n    return (\n      <span className={classNames}>\n        <span className=\"todo-list-item-label\"\n          onClick={onToggleDone}\n        >\n          {label}\n        </span>\n\n        <button type=\"button\"\n          className=\"btn btn-outline-success btn-sm shadow-none float-right\"\n          onClick={onToggleImportant}\n        >\n          <i className=\"fa fa-exclamation\" />\n        </button>\n\n        <button type=\"button\"\n          className=\"btn btn-outline-danger btn-sm shadow-none float-right\"\n          onClick={onDeleted}\n        >\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      </span>\n    );\n  }\n}\n","import TodoList from './todo-list';\n\nexport default TodoList;","import React from 'react';\n\nimport TodoListItem from '../todo-list-item/todo-list-item';\nimport './todo-list.css';\n\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\n\n  const elements = todos.map((item) => {\n    const { id, ...itemProps } = item;\n\n    return (\n      <li key={id} className=\"list-group-item\">\n        <TodoListItem\n          {...itemProps}\n          onDeleted={() => onDeleted(id)}\n          onToggleImportant={() => onToggleImportant(id)}\n          onToggleDone={() => onToggleDone(id)}\n        />\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"list-group todo-list\">\n      { elements }\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import ItemStatusFilter from './item-status-filter';\n\nexport default ItemStatusFilter;","import React, { Component } from 'react';\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends Component {\n\n  buttons = [\n    { name: 'all', label: 'All' },\n    { name: 'active', label: 'Active' },\n    { name: 'done', label: 'Done' },\n  ]\n\n  render() {\n    const { filter, onFilterChange } = this.props;\n\n    const buttons = this.buttons.map(({ name, label }) => {\n      const isActive = filter === name;\n      const activeClass = isActive ? 'btn-info' : 'btn-outline-secondary'\n      return (\n        <button type=\"button\"\n          className={`btn shadow-none ${ activeClass }`}\n          key={name}\n          onClick={() => onFilterChange(name)}\n        >\n          {label}\n        </button>\n      );\n    })\n\n    return (\n      <div className=\"btn-group\">\n        {buttons}\n      </div>\n    );\n  }\n}\n","import ItemAddForm from './item-add-form';\n\nexport default ItemAddForm;","import React, { Component } from 'react';\nimport './item-add-form.css';\n\nexport default class ItemAddForm extends Component {\n\n  state = {\n    label: ''\n  }\n\n  onLabelChange = (event) => {\n    //console.log(event.target.value);\n    this.setState({\n      label: event.target.value\n    })\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    this.props.addItem(this.state.label);\n    this.setState({\n      label: ''\n    })\n  }\n\n  render() {\n    return (\n      <form className='item-add-form d-flex'\n        onSubmit={this.onSubmit}\n      >\n        <input type='text'\n          className='form-control shadow-none'\n          onChange={this.onLabelChange}\n          placeholder='What needs to be done'\n          value={this.state.label}\n        />\n        <button className='btn btn-outline-secondary shadow-none'>\n          Add&nbsp;Item\n        </button>\n      </form>\n    )\n  }\n}","import App from './app';\n\nexport default App;","import React, { Component } from 'react';\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport TodoList from '../todo-list';\nimport ItemStatusFilter from '../item-status-filter';\nimport ItemAddForm from '../item-add-form'\n\nimport './app.css';\n\nexport default class App extends Component {\n\n  maxId = 100;\n\n  state = {\n    todoData: [\n      /**\n      { label: 'Drink Coffee', important: false, id: 1 },\n      { label: 'Make Awesome App', important: true, id: 2 },\n      { label: 'Have a lunch', important: false, id: 3 },\n      */\n      this.createTodoItem('Drink Coffee'),\n      this.createTodoItem('Make Awesome App'),\n      this.createTodoItem('Have a lunch'),\n    ],\n    term: '',\n    filter: 'all'  //  all, active, done\n  }\n\n  createTodoItem(label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++\n    }\n  }\n\n  /**\n  deletItemBySlice = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id);\n      const newArray = [\n        ...todoData.slice(0, idx),\n        ...todoData.slice(idx + 1)\n      ]\n      return {\n        todoData: newArray\n      }\n    })\n  }\n  */\n  deleteItemByFilter = (id) => {\n    this.setState(({ todoData }) => {\n      const newArray = todoData.filter((el) => el.id !== id);\n      return {\n        todoData: newArray\n      }\n    })\n  };\n\n  addItem = (text) => {\n    /**\n    const newItem = {\n      label: text,\n      important: false,\n      id: this.maxId++\n    }\n    */\n    const newItem = this.createTodoItem(text);\n\n    this.setState(({ todoData }) => {\n      const newArray = [ ...todoData, newItem, ]\n      return {\n        todoData: newArray\n      }\n    })\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex((el) => el.id === id);\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] }\n\n    return [\n      ...arr.slice(0, idx),\n      newItem,\n      ...arr.slice(idx + 1)\n    ];\n  }\n\n  onToggleImportant = (id) => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, 'important')\n      }\n    })\n  }\n\n  onToggleDone = (id) => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, 'done')\n      }\n    })\n  }\n\n  onSearchChange = (term) => {\n    this.setState({ term });\n  }\n\n  onFilterChange = (filter) => {\n    this.setState({ filter });\n  }\n\n  search(items, term) {\n    if (term.length === 0) {\n      return items;\n    }\n\n    return items.filter((item) => {\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\n    })\n  }\n\n  filter(items, filter) {\n    switch (filter) {\n      case 'all':\n        return items;\n      case 'active':\n        return items.filter((item) => !item.done);\n      case 'done':\n        return items.filter((item) => item.done);\n      default:\n        return items;\n    }\n  }\n\n  render() {\n    const { todoData, term, filter } = this.state;\n    const visibleItems = this.filter(this.search(todoData, term), filter)\n    const doneCount = todoData.filter((el) => el.done).length;\n    const todoCount = todoData.length - doneCount\n\n    return (\n      <div className=\"todo-app\">\n        <AppHeader toDo={todoCount} done={doneCount} />\n        <div className=\"top-panel d-flex\">\n          <SearchPanel onSearchChange={this.onSearchChange}/>\n          <ItemStatusFilter\n            filter={filter}\n            onFilterChange={this.onFilterChange}\n            />\n        </div>\n        <TodoList\n          todos={visibleItems}\n          onDeleted={this.deleteItemByFilter}\n          onToggleImportant={this.onToggleImportant}\n          onToggleDone={this.onToggleDone}\n        />\n        <ItemAddForm addItem={this.addItem} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}